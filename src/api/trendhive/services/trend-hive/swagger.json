{
  "components": {
    "schemas": {
      "AdminLoginDto": {
        "properties": {
          "email": {
            "description": "The email of the admin",
            "example": "admin@example.com",
            "type": "string"
          },
          "password": {
            "description": "The password of the admin",
            "example": "Admin@123",
            "minLength": 6,
            "type": "string"
          }
        },
        "required": ["email", "password"],
        "type": "object"
      },
      "AuthResponseDto": {
        "properties": {
          "message": {
            "description": "Email shared successfully",
            "example": "Email sent message",
            "type": "string"
          },
          "success": {
            "description": "Success or not",
            "example": "Login",
            "type": "boolean"
          },
          "userId": {
            "description": "User ID (optional)",
            "example": 12345,
            "type": "number"
          }
        },
        "required": ["success", "message"],
        "type": "object"
      },
      "Category": {
        "properties": {},
        "type": "object"
      },
      "CheckUserResponseDto": {
        "properties": {
          "data": {
            "description": "shared message",
            "example": "User details",
            "type": "object"
          },
          "message": {
            "description": "email is verified",
            "example": "Email is verified",
            "type": "string"
          },
          "verified": {
            "description": "status",
            "example": true,
            "type": "boolean"
          }
        },
        "required": ["data", "message", "verified"],
        "type": "object"
      },
      "ConfirmationEmailResponseDto": {
        "properties": {
          "message": {
            "description": "shared message",
            "example": "email shared sucessfully",
            "type": "string"
          },
          "status": {
            "description": "status",
            "example": true,
            "type": "boolean"
          }
        },
        "required": ["message", "status"],
        "type": "object"
      },
      "CreateCategoryDto": {
        "properties": {
          "description": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": ["name"],
        "type": "object"
      },
      "CreateProductDto": {
        "properties": {
          "availableQuantity": {
            "type": "number"
          },
          "categoryId": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "images": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "name": {
            "type": "string"
          },
          "price": {
            "type": "number"
          }
        },
        "required": ["name", "price", "description", "categoryId", "availableQuantity"],
        "type": "object"
      },
      "CreateUserDto": {
        "properties": {
          "email": {
            "description": "This is the email of the user",
            "example": "test@email.com",
            "type": "string"
          },
          "firbaseId": {
            "description": "Users firbase uid",
            "example": "123432234gdd",
            "type": "string"
          },
          "isEmailVerified": {
            "description": "Email is verified or not",
            "example": false,
            "type": "boolean"
          },
          "name": {
            "description": "This is the name of the user",
            "example": "John ddoe",
            "type": "string"
          },
          "password": {
            "description": "Ths is the password of the user",
            "example": "password",
            "type": "string"
          },
          "phoneNumber": {
            "description": "Users phone number",
            "example": "98782435546",
            "type": "string"
          }
        },
        "required": ["name", "email", "password", "isEmailVerified", "phoneNumber", "firbaseId"],
        "type": "object"
      },
      "LoginDto": {
        "properties": {
          "email": {
            "description": "The email of the user",
            "example": "test@example.com",
            "type": "string"
          },
          "password": {
            "description": "The password of the user",
            "example": "test@examle.com",
            "type": "string"
          }
        },
        "required": ["email", "password"],
        "type": "object"
      },
      "PartialTypeClass": {
        "properties": {},
        "type": "object"
      },
      "Product": {
        "properties": {},
        "type": "object"
      },
      "UpdateAddressRequestDto": {
        "properties": {
          "address": {
            "description": "Street address of the user",
            "example": "123 Main St",
            "type": "string"
          },
          "city": {
            "description": "City of the user",
            "example": "New York",
            "type": "string"
          },
          "country": {
            "description": "country of the user",
            "example": "India",
            "type": "string"
          },
          "isDefault": {
            "description": "Indicates if this is the default user",
            "example": true,
            "type": "boolean"
          },
          "phoneNumber": {
            "description": "Phone number associated with the user",
            "example": "+1-555-123-4567",
            "type": "string"
          },
          "state": {
            "description": "State of the user",
            "example": "NY",
            "type": "string"
          },
          "zipCode": {
            "description": "ZIP code of the user",
            "example": "10001",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateCategoryDto": {
        "properties": {
          "description": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateProductDto": {
        "properties": {
          "availableQuantity": {
            "type": "number"
          },
          "categoryId": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "images": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "name": {
            "type": "string"
          },
          "price": {
            "type": "number"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "bearer": {
        "bearerFormat": "JWT",
        "scheme": "bearer",
        "type": "http"
      }
    }
  },
  "info": {
    "contact": {},
    "description": "The Trend Hive API description",
    "title": "Trend Hive API",
    "version": "1.0"
  },
  "openapi": "3.0.0",
  "paths": {
    "/": {
      "get": {
        "operationId": "AppController_getHello",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["App"]
      }
    },
    "/address/update-address/{token}": {
      "patch": {
        "operationId": "AddressController_updateUserDetails",
        "parameters": [
          {
            "in": "path",
            "name": "token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAddressRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartialTypeClass"
                }
              }
            },
            "description": "Returns the updated partial user entity"
          }
        },
        "summary": "Update user details during onboarding",
        "tags": ["Address"]
      }
    },
    "/admin/login": {
      "post": {
        "operationId": "AdminController_login",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminLoginDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "logged in succesfully"
          }
        },
        "summary": "admin login",
        "tags": ["admin"]
      }
    },
    "/auth/check-user/{firebaseId}": {
      "get": {
        "operationId": "AuthController_checkUser",
        "parameters": [
          {
            "in": "path",
            "name": "firebaseId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckUserResponseDto"
                }
              }
            },
            "description": "User Verified"
          }
        },
        "summary": "Check if the user is verified or not",
        "tags": ["auth"]
      }
    },
    "/auth/login": {
      "post": {
        "operationId": "AuthController_login",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponseDto"
                }
              }
            },
            "description": "Login successful"
          }
        },
        "summary": "Login in a user",
        "tags": ["auth"]
      }
    },
    "/auth/resend-confirm-email/{id}": {
      "post": {
        "operationId": "AuthController_resendConfirmationEmail",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfirmationEmailResponseDto"
                }
              }
            },
            "description": "Email shared successfully."
          }
        },
        "summary": "Resend confirmation email",
        "tags": ["auth"]
      }
    },
    "/auth/signup": {
      "post": {
        "operationId": "AuthController_signup",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponseDto"
                }
              }
            },
            "description": "User created"
          }
        },
        "summary": "Register a new user",
        "tags": ["auth"]
      }
    },
    "/categories": {
      "get": {
        "operationId": "CategoriesController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Return all categories"
          }
        },
        "summary": "Get all categories",
        "tags": ["categories"]
      },
      "post": {
        "operationId": "CategoriesController_create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCategoryDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            },
            "description": "Category created successfully"
          }
        },
        "summary": "Create a new category",
        "tags": ["categories"]
      }
    },
    "/categories/{id}": {
      "delete": {
        "operationId": "CategoriesController_remove",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Category deleted successfully"
          }
        },
        "summary": "Delete a category",
        "tags": ["categories"]
      },
      "get": {
        "operationId": "CategoriesController_findOne",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            },
            "description": "Return the category"
          }
        },
        "summary": "Get a category by id",
        "tags": ["categories"]
      },
      "patch": {
        "operationId": "CategoriesController_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCategoryDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            },
            "description": "Category updated successfully"
          }
        },
        "summary": "Update a category",
        "tags": ["categories"]
      }
    },
    "/products": {
      "get": {
        "operationId": "ProductsController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Return all products"
          }
        },
        "summary": "Get all products",
        "tags": ["products"]
      },
      "post": {
        "operationId": "ProductsController_create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            },
            "description": "Product created successfully"
          }
        },
        "summary": "Create a new product",
        "tags": ["products"]
      }
    },
    "/products/{id}": {
      "delete": {
        "operationId": "ProductsController_remove",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product deleted successfully"
          }
        },
        "summary": "Delete a product",
        "tags": ["products"]
      },
      "get": {
        "operationId": "ProductsController_findOne",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            },
            "description": "Return the product"
          }
        },
        "summary": "Get a product by id",
        "tags": ["products"]
      },
      "patch": {
        "operationId": "ProductsController_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            },
            "description": "Product updated successfully"
          }
        },
        "summary": "Update a product",
        "tags": ["products"]
      }
    },
    "/upload": {
      "post": {
        "operationId": "AppController_uploadFile",
        "parameters": [
          {
            "in": "query",
            "name": "type",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "file": {
                    "format": "binary",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": ["App"]
      }
    },
    "/upload-multiple": {
      "post": {
        "operationId": "AppController_uploadFiles",
        "parameters": [
          {
            "in": "query",
            "name": "type",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "files": {
                    "items": {
                      "format": "binary",
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": ["App"]
      }
    },
    "/users/profile": {
      "get": {
        "operationId": "UsersController_getProfile",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Get user profile",
        "tags": ["Users"]
      }
    }
  },
  "servers": [],
  "tags": []
}
